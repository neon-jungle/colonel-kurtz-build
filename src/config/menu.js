'use strict';

var siblingsOf = require('../utils/siblingsOf');

var _require = require('../actions/blocks');

var destroy = _require.destroy;
var move = _require.move;

module.exports = [{
  id: 'moveBefore',
  label: 'Move Up',
  onClick: function onClick(app, block) {
    app.push(move, [block, -1]);
  },
  isDisabled: function isDisabled(app, block) {
    return siblingsOf(app.state.blocks, block)[0] === block;
  }
}, {
  id: 'moveAfter',
  label: 'Move Down',
  onClick: function onClick(app, block) {
    app.push(move, [block, 1]);
  },
  isDisabled: function isDisabled(app, block) {
    return siblingsOf(app.state.blocks, block).pop() === block;
  }
}, {
  id: 'destroy',
  label: 'Remove',
  onClick: function onClick(app, block) {
    app.push(destroy, block.id);
  }
}];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb25maWcvbWVudS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksVUFBVSxHQUFHLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFBOztlQUN2QixPQUFPLENBQUMsbUJBQW1CLENBQUM7O0lBQTlDLE9BQU8sWUFBUCxPQUFPO0lBQUUsSUFBSSxZQUFKLElBQUk7O0FBRW5CLE1BQU0sQ0FBQyxPQUFPLEdBQUcsQ0FDZjtBQUNFLElBQUUsRUFBRyxZQUFZO0FBQ2pCLE9BQUssRUFBRyxTQUFTO0FBQ2pCLFNBQU8sRUFBQSxpQkFBQyxHQUFHLEVBQUUsS0FBSyxFQUFFO0FBQ2xCLE9BQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtHQUM1QjtBQUNELFlBQVUsRUFBQSxvQkFBQyxHQUFHLEVBQUUsS0FBSyxFQUFFO0FBQ3JCLFdBQU8sVUFBVSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQTtHQUN4RDtDQUNGLEVBQ0Q7QUFDRSxJQUFFLEVBQUcsV0FBVztBQUNoQixPQUFLLEVBQUcsV0FBVztBQUNuQixTQUFPLEVBQUEsaUJBQUMsR0FBRyxFQUFFLEtBQUssRUFBRTtBQUNsQixPQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFBO0dBQzNCO0FBQ0QsWUFBVSxFQUFBLG9CQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUU7QUFDckIsV0FBTyxVQUFVLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUMsR0FBRyxFQUFFLEtBQUssS0FBSyxDQUFBO0dBQzNEO0NBQ0YsRUFDRDtBQUNFLElBQUUsRUFBRyxTQUFTO0FBQ2QsT0FBSyxFQUFHLFFBQVE7QUFDaEIsU0FBTyxFQUFBLGlCQUFDLEdBQUcsRUFBRSxLQUFLLEVBQUU7QUFDbEIsT0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFBO0dBQzVCO0NBQ0YsQ0FDRixDQUFBIiwiZmlsZSI6Im1lbnUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgc2libGluZ3NPZiA9IHJlcXVpcmUoJy4uL3V0aWxzL3NpYmxpbmdzT2YnKVxubGV0IHsgZGVzdHJveSwgbW92ZSB9ID0gcmVxdWlyZSgnLi4vYWN0aW9ucy9ibG9ja3MnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IFtcbiAge1xuICAgIGlkIDogJ21vdmVCZWZvcmUnLFxuICAgIGxhYmVsIDogJ01vdmUgVXAnLFxuICAgIG9uQ2xpY2soYXBwLCBibG9jaykge1xuICAgICAgYXBwLnB1c2gobW92ZSwgW2Jsb2NrLCAtMV0pXG4gICAgfSxcbiAgICBpc0Rpc2FibGVkKGFwcCwgYmxvY2spIHtcbiAgICAgIHJldHVybiBzaWJsaW5nc09mKGFwcC5zdGF0ZS5ibG9ja3MsIGJsb2NrKVswXSA9PT0gYmxvY2tcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBpZCA6ICdtb3ZlQWZ0ZXInLFxuICAgIGxhYmVsIDogJ01vdmUgRG93bicsXG4gICAgb25DbGljayhhcHAsIGJsb2NrKSB7XG4gICAgICBhcHAucHVzaChtb3ZlLCBbYmxvY2ssIDFdKVxuICAgIH0sXG4gICAgaXNEaXNhYmxlZChhcHAsIGJsb2NrKSB7XG4gICAgICByZXR1cm4gc2libGluZ3NPZihhcHAuc3RhdGUuYmxvY2tzLCBibG9jaykucG9wKCkgPT09IGJsb2NrXG4gICAgfVxuICB9LFxuICB7XG4gICAgaWQgOiAnZGVzdHJveScsXG4gICAgbGFiZWwgOiAnUmVtb3ZlJyxcbiAgICBvbkNsaWNrKGFwcCwgYmxvY2spIHtcbiAgICAgIGFwcC5wdXNoKGRlc3Ryb3ksIGJsb2NrLmlkKVxuICAgIH1cbiAgfVxuXVxuIl19